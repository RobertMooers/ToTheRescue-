@model ToTheRescueWebApplication.Models.ProfilesModel

@{
    ViewBag.Title = "ChooseProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //show alert messages if any problems occurred choosing a profile
    if (TempData["DProfileError"] != null)
    {
        <script type="text/javascript">
                alert("Incorrect profile name eneterd. Please try to delete the profile again.");
        </script>
    }

    if (TempData["DEmailError"] != null)
    {
        <script type="text/javascript">
                alert("Incorrect email address eneterd. Please try to delete the profile again.");
        </script>
    }
}

<style>
    #ChooseProfileheader {
        text-align: center;
    }

    #ProfileNames {
        font-size: 32px;
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    }

    #DeleteProfileButton {
        border-radius: 10px;
        position: relative;
        left: 0%;
    }

    #CreateNewPorifleButton {
        border-radius: 10px;
        position: relative;
        left: 35%;
        visibility: visible;
    }

    #PlayButton {
        border-radius: 10px;
        position: relative;
        left: 67%;
        visibility: hidden;
    }

    #CencelButton {
        border-radius: 10px;
        visibility: hidden;
    }

    #DeleteProfileForm {
        visibility: hidden;
    }
    #DeleteProfileSubmit
    {
        border-radius: 10px;
    }
</style>

<body id="ChooseProfileBody">
    <h1 id="ChooseProfileheader">Choose Your Profile!</h1>
    <br />

    @if (Model.GetAllProfileAvatarsForASpecificUser().Count() > 0)
    {
        //display all of the profiles for a specific user
        <table id="ProfilesTable" , style="width:100%">
            @if (Model.GetProfileNamesForASpecificUser().Count() <= 4)
            {
                <tr id="RowOneProfiles">
                    @for (int i = 0; i < Model.GetProfileNamesForASpecificUser().Count(); i++)
                    {
                        var base64 = Convert.ToBase64String(Model.GetAllProfileAvatarsForASpecificUser()[i]);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <td>
                            <div id="@("Profile" + i)" , onclick="ToggleColor(@i.ToString())">
                                <text id="ProfileNames">@Model.GetProfileNamesForASpecificUser()[i]</text>
                                <img id="Avatar" , src="@imgSrc" />
                            </div>
                        </td>
                    }
                </tr>
            }
            else
            {
                int i = 0;
                <tr id="RowOneProfiles">
                    @for (i = 0; i < 4; i++)
                    {
                        var base64 = Convert.ToBase64String(Model.GetAllProfileAvatarsForASpecificUser()[i]);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <td>
                            <div id="@("Profile" + i)" , onclick="ToggleColor(@i.ToString())">
                                <text id="ProfileNames">@Model.GetProfileNamesForASpecificUser()[i]</text>
                                <img id="Avatar" , src="@imgSrc" />
                            </div>
                        </td>
                    }
                </tr>
                <tr id="RowTwoProfiles">
                    @for (int x = i; x < Model.GetProfileNamesForASpecificUser().Count(); x++)
                    {
                        var base64 = Convert.ToBase64String(Model.GetAllProfileAvatarsForASpecificUser()[x]);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <td>
                            <div id="@("Profile" + x)" , onclick="ToggleColor(@x.ToString())">
                                <text id="ProfileNames">@Model.GetProfileNamesForASpecificUser()[x]</text>
                                <img id="Avatar" , src="@imgSrc" />
                            </div>
                        </td>
                    }
                </tr>
            }
        </table>
    }
    @*allows deletion of a profile*@
    <button id="DeleteProfileButton" , onclick="ClickedDelete()">Delete Profile</button>

    @*Only display the Create New Profile button when there are less than 8 profiles*@
    @if (Model.GetAllProfileAvatarsForASpecificUser().Count() < 8)
    {
        <input type="button" id="CreateNewPorifleButton" value="Create New Profiile" onclick="@("window.location.href='" + @Url.Action("CreateProfilePage", "Profiles") + "'");" />
    }
    <button id="PlayButton" , onclick="@("window.location.href='" + @Url.Action("GoToMainMenu", "Profiles") + "'");">Play</button>

    @*get user input in order to delete a profile*@
    @using (Html.BeginForm("GetUserInputToDeleteProfile", "Profiles", FormMethod.Post, new { id = "DeleteProfileForm" }))
        {
            <h5>Please enter the name of the profile you would like to delete</h5>
            @Html.TextBoxFor(m => m.ProfileNameToDelete)
            <h5>Please enter your email to delete this profile:</h5>
            @Html.TextBoxFor(m => m.UserEmail)
            <br />
            <br />
            <input type="submit" , value="Delete Profile", id="DeleteProfileSubmit" />
        }
    <br />
    <button id="CencelButton" , onclick="ClickedCancel()">Cencel</button>
    <h6>*Only eight profiles per user permitted.</h6>

    @*use jquery*@
    <script src="~/scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">

        //Toggles the color of the profile name when user clicks a profile
        function ToggleColor(id) {
            var ProfileID = "Profile";
            ProfileID = ProfileID.concat(id);
            var profileDiv = document.getElementById(ProfileID);

            //toggle the color of all the profile names
            if (profileDiv.style.color !== "red") {
                profileDiv.style.color = "red";
                var route = '/Profiles/SelectedProfile/';
                route = route.concat(id);

                //Call the Selected profile function in the profiles controller while
                //not changing the view
                $.ajax({
                    url: route,
                    success: function(){
                        //do nothing
                    }
                });
            }
            else {
                profileDiv.style.color = "black";
            }

            //ensure all the other profile namees are black
            for (var i = 0; i < @Model.GetProfileNamesForASpecificUser().Count(); i++) {
                if (i != id) {
                    var tempProfID = "Profile";
                    tempProfID = tempProfID.concat(i.toString());
                    document.getElementById(tempProfID).style.color = "black";
                }
            }
            DisplayButtons();
        }

        //Displays all the buttons after a user clicks a profile
        function DisplayButtons() {
            var visible = false;

            for (var i = 0; i <  @Model.GetProfileNamesForASpecificUser().Count(); i++) {
                var tempProfID = "Profile";
                tempProfID = tempProfID.concat(i.toString());
                tempProfID = document.getElementById(tempProfID)
                if (tempProfID.style.color === "red")
                {
                    visible = true;
                }
            }
            if (visible === true)
            {
                document.getElementById("PlayButton").style.visibility = "visible";
            }
            else
            {
                document.getElementById("PlayButton").style.visibility = "hidden";
            }
        }

        //Display all the forms/buttons after a user clicked the delete button
        function ClickedDelete()
        {
            document.getElementById("DeleteProfileButton").style.visibility = "hidden";
            document.getElementById("DeleteProfileForm").style.visibility = "visible";
            document.getElementById("CencelButton").style.visibility = "visible";
        }

        //Displays all the button after a user clicked the cancel delete button
        function ClickedCancel()
        {
            document.getElementById("DeleteProfileButton").style.visibility = "visible";
            document.getElementById("DeleteProfileForm").style.visibility = "hidden";
            document.getElementById("CencelButton").style.visibility = "hidden";
        }
    </script>

</body>