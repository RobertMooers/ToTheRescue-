@model ToTheRescueWebApplication.Models.ProfilesModel

@{
    ViewBag.Title = "CreateProfilePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Model.NewProfileName = "";

    //display any errors as alerts 
    if (TempData["CEmptyNameError"] != null)
    {
        <script type="text/javascript">
            alert("You must enter a profile name in order to create a new profile. Please try again.");
        </script>
    }

    if (TempData["CSpaceNameError"] != null)
    {
        <script type="text/javascript">
            alert("You can't begin a profile name with the space character. Please try again.");
        </script>
    }

    if (TempData["cInvalidAvatarIndex"] != null)
    {
        <script type="text/javascript">
            alert("You must select an avatar by clicking on an avatar picture. Please try again.");
        </script>
    }
}

<style>
    #Header {
        text-align: center;
    }

    #CreateProfileButton {
        border-radius: 10px;
        visibility: hidden;
    }

    #BackButton {
        border-radius: 10px;
        position: relative;
    }

    div {
        border-radius: 10px;
    }
</style>

<body id="CreateProfilePage">
    <h1 id="Header">Create Your Profile!</h1>

    @*create a form to center a username and select a profile avatar*@
    @using (Html.BeginForm("CreateNewProfile", "Profiles", FormMethod.Post, new { id = "EnterProfileNameForm" }))
    {
        <h3 id="EnterProfileNameText">Enter your Profile Name</h3>
        @Html.TextBoxFor(m => m.NewProfileName)

        <h3 id="ChooseProfText">Choose an avatar!</h3>
        <table id="AvatarsTable" , style="width:100%">
            <tr id="rowOneAvatars">
                @for (int i = 0; i < Model.GetAllProfileAvatars().Count() / 2; i++)
                {
                    var base64 = Convert.ToBase64String(Model.GetAllProfileAvatars()[i]);
                    var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                    <td>
                        <div id="@("Avatar" + i)" , onclick="SelectedProfile(@i.ToString())">
                            <img src="@imgSrc" />
                        </div>
                    </td>
                }
            </tr>
            <tr id="rowTwoAvatars">
                @for (int i = Model.GetAllProfileAvatars().Count() / 2; i < Model.GetAllProfileAvatars().Count(); i++)
                {
                    var base64 = Convert.ToBase64String(Model.GetAllProfileAvatars()[i]);
                    var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                    <td>
                        <div id="@("Avatar" + i)" , onclick="SelectedProfile(@i.ToString())">
                            <img src="@imgSrc" />
                        </div>
                    </td>
                }
            </tr>
        </table>
        <br />
        <input type="submit" , value="Create Profile" , id="CreateProfileButton" />
    }
    <br />
    @*if clicked back, return to choose profiles page*@
    <input type="button" id="BackButton" value="Back" onclick="@("window.location.href='" + @Url.Action("ChooseProfilePage", "Profiles") + "'");" />
</body>

<script src="~/scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    //toggles the outline of an avatar if the user selected an avatar
    function SelectedProfile(index)
    {
        var AvatarID = "Avatar";
        AvatarID = AvatarID.concat(index);
        var avatarDiv = document.getElementById(AvatarID);

        //toggle the color
        if (avatarDiv.style.border !== "thick solid red")
        {
            avatarDiv.style.border = "thick solid red";

            var route = '/Profiles/SelectedAvatar/';
            route = route.concat(index);

            //show the create profile button
            document.getElementById("CreateProfileButton").style.visibility = "visible";

            //Call the SelectedAvatar function in the controller
            //while not changing the view at all
            $.ajax({
                url: route,
                success: function (){
                    //do nothing
                }
            });
        }
        else {
            avatarDiv.style.border = "thick solid transparent";

            var route = '/Profiles/UnSelectedAvatar';

            //hide the create profile button
            document.getElementById("CreateProfileButton").style.visibility = "hidden";

            //Call the UnSelectedAvatar function in the controller
            //while not changing the view at all
            $.ajax({
                url: route,
                success: function (){
                    
                }
            });
        }

        //ensure all the other avatars aren't selected
        for (var i = 0; i < @Model.GetAllProfileAvatars().Count(); i++) {
            if (i != index) {
                var avatarID = "Avatar";
                avatarID = avatarID.concat(i.toString());
                document.getElementById(avatarID).style.border = "thick solid transparent";
            }
        }
    }
</script>

