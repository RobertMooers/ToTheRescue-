@using ToTheRescueWebApplication.Repositories

@model List<Profile>

@{
    Layout = "~/Views/Shared/_ChooseProfileLayout.cshtml";
    ViewBag.Title = "ChooseProfilePage";

    /***********************I put this in here temporarily so I can log out************************************/
    using (Html.BeginForm("LogOff", "Login", FormMethod.Post, new { @id = "logoutForm" }))
    {
        @Html.AntiForgeryToken()
        <a href="Logout" onclick="document.getElementById('logoutForm').submit(); return false;">Logout</a>
    }
    /*********************************************************************************************************/

    //I need to re-adjust the html border height based on the number of profile there are
    if (Model.Count() <= 4)
    {
        <script type="text/javascript">
            window.onload = function (){
                //document.getElement("html").style.height = "100%";
                document.getElementsByTagName("html")[0].style.height = "100%";
            }
        </script>
    }
    else
    {
        <script type="text/javascript">
            window.onload = function () {
                document.getElementsByTagName("html")[0].style.height = "auto";
            }
        </script>
    }
}

<html>
<body id="ChooseProfileBody">
    <h1 id="ChooseProfileheader">Choose Your Profile!</h1>
    <br />
    <h4 id="emailError">Incorrect email address eneterd. Profile not deleted.</h4>
    @if (Model.Count() > 0)
    {
        int i = 0;
        <table id="ProfilesTable">
            @if (Model.Count() <= 4)
            {
                <tr id="RowOneProfiles">
                    @for (i = 0; i < Model.Count(); i++)
                    {
                        var base64 = Convert.ToBase64String(Model[i].Avatar);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <td>
                            <div id="@("Profile" + i)" class="ProfiledDiv" onclick="ToggleColor(@i.ToString())">
                                <text id="ProfileNames">@Model[i].ProfileName</text>
                                <img id="Avatar" , src="@imgSrc" />
                            </div>
                        </td>
                    }

                    @if (i < 4)
                    {
                        for (int x = i; x < 4; x++)
                        {
                            //make some empty cells so spacing looks normal
                            <td>&nbsp;</td>
                        }
                    }
                </tr>
            }
            else
            {
                <tr id="RowOneProfiles">
                    @for (i = 0; i < 4; i++)
                    {
                        var base64 = Convert.ToBase64String(Model[i].Avatar);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <td>
                            <div id="@("Profile" + i)" class="ProfiledDiv" onclick="ToggleColor(@i.ToString())">
                                <text id="ProfileNames">@Model[i].ProfileName</text>
                                <img id="Avatar" , src="@imgSrc" />
                            </div>
                        </td>
                    }
                </tr>
                <tr id="RowTwoProfiles">
                    @for (int x = i; x < Model.Count(); x++)
                    {
                        var base64 = Convert.ToBase64String(Model[x].Avatar);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <td>
                            <div id="@("Profile" + x)" class="ProfiledDiv" onclick="ToggleColor(@x.ToString())">
                                <text id="ProfileNames">@Model[x].ProfileName</text>
                                <img id="Avatar" , src="@imgSrc" />
                            </div>
                        </td>
                    }
                </tr>
            }
        </table>
    }
    else
    {
        //add spacing because the table isn't created
        //will place the create profile page in the middle of the page
        <br /><br />
    }
    <br />
    <div id="buttonContainer">
        @*allows deletion of a profile*@
        <button id="DeleteProfileButton" class="Buttons" , onclick="ClickedDelete()">Delete Profile</button>

        @*Only display the Create New Profile button when there are less than 8 profiles*@
        @if (Model.Count() < 8)
        {
            <input type="button" class="Buttons" id="CreateNewPorifleButton" value="Create New Profile" onclick="@("window.location.href='" + @Url.Action("CreateProfilePage", "Profile") + "'");" />
        }

        <button id="PlayButton" class="Buttons" onclick="ClickedPlay()">Play</button>
        <h5 id="emailText" class="DeleteSection">Please enter your email to delete this profile:</h5>
        <input type="text" , id="emailTextBox" class="DeleteSection" />
        <br />
        <input type="submit" class="Buttons" value="Delete Profile" id="DeleteProfileSubmit" onclick="DeleteProfile()" />
        <br />
        <button id="CancelButton" class="Buttons" onclick="ClickedCancel()">Cancel</button>
    </div>

</body>
</html>

@*use jquery*@
<script src="~/scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    //Toggles the color of the profile name when user clicks a profile
    function ToggleColor(id) {
        var ProfileID = "Profile";
        ProfileID = ProfileID.concat(id);
        var profileDiv = document.getElementById(ProfileID);

        //toggle the color of all the profile names
        if (profileDiv.style.color !== "orange") {
            profileDiv.style.color = "orange";
        }
        else {
            profileDiv.style.color = "white";
        }

        //ensure all the other profile namees are white
        for (var i = 0; i < @Model.Count(); i++) {
            if (i != id) {
                var tempProfID = "Profile";
                tempProfID = tempProfID.concat(i.toString());
                document.getElementById(tempProfID).style.color = "white";
            }
        }
        DisplayButtons();
    }

    //Displays all the buttons after a user clicks a profile
    function DisplayButtons() {
        var visible = false;

        for (var i = 0; i <  @Model.Count(); i++) {
            var tempProfID = "Profile";
            tempProfID = tempProfID.concat(i.toString());
            tempProfID = document.getElementById(tempProfID)
            if (tempProfID.style.color === "orange")
            {
                //ensures a profile is selected
                visible = true;
            }
        }

        //if a profile is selected, display the play and delete buttons
        if (visible === true)
        {
            document.getElementById("PlayButton").style.visibility = "visible";
            document.getElementById("DeleteProfileButton").style.visibility = "visible";
        }
        else
        {
            document.getElementById("PlayButton").style.visibility = "hidden";
            document.getElementById("DeleteProfileButton").style.visibility = "hidden";
        }

        //ensure the delete profile form is invisible
        document.getElementById("emailText").style.visibility = "hidden";
        document.getElementById("emailTextBox").style.visibility = "hidden";
        document.getElementById("CancelButton").style.visibility = "hidden";
        document.getElementById("DeleteProfileSubmit").style.visibility = "hidden";
    }

    //Display all the forms/buttons after a user clicked the delete button
    function ClickedDelete()
    {
        var createButton = document.getElementById("CreateNewPorifleButton");

        document.getElementById("DeleteProfileButton").style.visibility = "hidden";

        if (createButton !== null)
            createButton.style.visibility = "hidden";

        document.getElementById("PlayButton").style.visibility = "hidden";

        document.getElementById("emailText").style.visibility = "visible";
        document.getElementById("emailTextBox").style.visibility = "visible";
        document.getElementById("DeleteProfileSubmit").style.visibility = "visible";
        document.getElementById("CancelButton").style.visibility = "visible";
    }

    //Displays all the button after a user clicked the cancel delete button
    function ClickedCancel()
    {
        var createButton = document.getElementById("CreateNewPorifleButton");

        document.getElementById("DeleteProfileButton").style.visibility = "visible";

        if (createButton !== null)
            createButton.style.visibility = "visible";

        document.getElementById("PlayButton").style.visibility = "visible";

        document.getElementById("DeleteProfileButton").style.visibility = "visible";
        document.getElementById("emailText").style.visibility = "hidden";
        document.getElementById("emailTextBox").style.visibility = "hidden";
        document.getElementById("CancelButton").style.visibility = "hidden";
        document.getElementById("DeleteProfileSubmit").style.visibility = "hidden";
    }

    //Calls the SelectedProfile function in the controller
    //before redirecting to the main menu
    function ClickedPlay(){
        for (var i = 0; i <  @Model.Count(); i++) {
            var tempProfID = "Profile";
            tempProfID = tempProfID.concat(i.toString());
            tempProfID = document.getElementById(tempProfID)
            if (tempProfID.style.color === "orange")
            {
                var route = '/Profile/SelectedProfile/';
                route = route.concat(i);

                //Call the SelectedProfile function in the profiles controller
                $.ajax({
                    url: route,
                    success: function(){
                        //go to main menu after
                        window.location.href = '/MainMenu/MainMenu';
                    }
                });
            }
        }
    }

    //Essentially makes c# function calls in order to delete the selected profile
    //out of the database
    function DeleteProfile() {
        var enteredEmail = document.getElementById("emailTextBox").value;
        var index = null;
        for (var i = 0; i <  @Model.Count(); i++) {
            var tempProfID = "Profile";
            tempProfID = tempProfID.concat(i.toString());
            tempProfID = document.getElementById(tempProfID)
            if (tempProfID.style.color === "orange")
            {
                //get the index of the selected profile to delete
                index = i;
                break;
            }
        }

        var route = '/Profile/SelectedProfile/';

        route = route.concat(index);

        //Call the SelectedProfile function in the profiles controller in order
        //to assign the session variable for the selected profileID
        $.ajax({
            url: route,
            success: function(){
                //just continue with the outer function
            }
        });

        //this regular expression checks to see if there
        //is at least one character of non whitespace in the entered email
        if (/\S/.test(enteredEmail) !== true || enteredEmail === '') {

            //string is all white space, set it to "error" so an error message is displayed
            enteredEmail = "error";
        }

        route = '/profile/delete/';
        route = route.concat(enteredEmail);
        route = route.concat('/');

        //Call the ClickedDelete function in the profile controller
        //to delete the selected profile out of the database
        $.ajax({
            url: route,
            success: function(){
                //reload the same page
                window.location.href = '/Profile/ChooseProfilePage';
            }
        });
    }
</script>

@{
     //displays an error if the user typed in the wrong email when
     //trying to delete a profile
    if (TempData["emailError"] != null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                document.getElementById("emailError").style.display = "block";
                document.getElementById("emailError").style.visibility = "visible";
            });
        </script>
    }
}